# Reference:
# https://eugene-babichenko.github.io/blog/2020/05/09/github-actions-cross-platform-auto-releases/

name: release
on:
  push:
    tags:
    - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    # Outputs are required for upload of release artifacts
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_version: ${{ env.RELEASE_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "release version is: ${{ env.RELEASE_VERSION }}"
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}

  build-release:
    name: Build release
    needs: ['create-release']
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Build
      run: cargo build --verbose --release

    - name: Get asset path
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          echo "ASSET_PATH=./target/release/psa-update.exe" >> $GITHUB_ENV
        else
          echo "ASSET_PATH=./target/release/psa-update" >> $GITHUB_ENV
        fi

    - name: Upload release archive
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.ASSET_PATH}}
        asset_name: psa-update-${{ matrix.config.os }}
        asset_content_type: application/octet-stream
